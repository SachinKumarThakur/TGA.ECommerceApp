volumes:
  datafiles:

services:
  tga.mysql:
    image: mysql:latest
    container_name: tga.mysql
    environment:
        MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    #Specify where the persisted Data should be stored
    volumes:
      - datafiles:/var/lib/mysql
    healthcheck:
       test : ["CMD", "mysqladmin", "ping", "-h", "localhost"]
       interval: 10s
       timeout: 5s
       retries: 5

  tga.ecommerceapp.productapi:
    image: ${DOCKER_REGISTRY-}productapi
    container_name: productapi
    build:
      context: .
      dockerfile: TGA.ECommerceApp.Product.API/Dockerfile
    #This Service Depends on the database service specifed above
    depends_on: 
      - tga.mysql
    ports:
      - "7000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ProductDbConnection=Server=tga.mysql;port=3306;Database=TGA_Product;User=root;Password=password;
      - ApiSettings__JwtOptions__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__JwtOptions__Issuer=TGA-Auth-API
      - ApiSettings__JwtOptions__Audience=TGA-Client
      - ApiSettings__JwtOptions__ExpiryInHours=7

  tga.ecommerceapp.ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    container_name: ocelotapigateway
    build:
      context: .
      dockerfile: TGA.ECommerceApp.OcelotApiGateway/Dockerfile
    ports:
      - "7777:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiSettings__Secret=This is used to Sign and verify JWT tokens, Replace it with your own secret
      - ApiSettings__Issuer=TGA-Auth-API
      - ApiSettings__Audience=TGA-Client
    links:
      - tga.ecommerceapp.productapi      
    depends_on:
      - tga.ecommerceapp.productapi 